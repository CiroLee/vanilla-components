const t=document.createElement("template");t.innerHTML='\n  <style>\n    :host {\n      display: inline-flex;\n    }\n    :host(.block) {\n      display:flex;\n    }\n    button[data-color="danger"] {\n      --color: var(--danger-color);\n    }\n    button[data-color="warning"] {\n      --color: var(--warning-color);\n    }\n    button[data-color="success"] {\n      --color: var(--success-color);\n    }\n    button[data-size="sm"] {\n      height: 24px;\n      font-size: 12px;\n      padding: 0 10px;\n    }\n    button[data-size="lg"] {\n      height: 40px;\n      font-size: 16px;\n    }\n    button[data-rounded="sm"] {\n      border-radius: 4px;\n    }\n    button[data-rounded="lg"] {\n      border-radius: 10px;\n    }\n    button[data-rounded="full"] {\n      border-radius:calc(infinity * 1px);\n    }\n    button[data-rounded="none"] {\n      border-radius: 0;\n    }\n    button {\n      --color: var(--primary-color);\n      width: 100%;\n      display: inherit;\n      border: 0;\n      justify-content: center;\n      align-items: center;\n      gap: 4px;\n      background-color: var(--color);\n      color: white;\n      font-size: 14px;\n      padding: 0 16px;\n      height: 32px;\n      border-radius: 6px;\n      transition-property: background-color,filter;\n      transition-duration: 0.2s;\n      box-sizing: border-box;\n      &[data-loading]{\n        pointer-events: none;\n        background-color: color-mix(in oklch, var(--color) 75%, white 25%);\n      }\n      &:disabled {\n        cursor: not-allowed;\n        background-color: color-mix(in oklch, var(--color) 65%, white 35%);\n      }\n      &:not(:disabled):hover {\n        background-color: color-mix(in oklch, var(--color) 90%, black 10%);\n      }\n      &:not(:disabled):active {\n        background-color: color-mix(in oklch, var(--color) 90%, black 20%);\n      }\n      &:focus-visible {\n        outline: 2px solid color-mix(in oklch, var(--color) 90%, white 60%);\n        outline-offset: 2px;\n      }\n      &:where([data-variant="outline"],[data-variant="ghost"]) {\n        background-color: transparent;\n        color: var(--color);\n        &:not(:disabled):hover {\n          background-color: color-mix(in oklch, var(--color) 15%, transparent 75%);\n        }\n        &:not(:disabled):active {\n          background-color: color-mix(in oklch, var(--color) 25%, transparent 75%);\n        }\n        &:disabled {\n          background-color: transparent;\n          color: color-mix(in oklch, var(--color) 65%, white 35%);\n          border-color: color-mix(in oklch, var(--color) 40%, white 60%);\n        }\n      }\n      &[data-variant="outline"] {\n        border: 1px solid color-mix(in oklch, var(--color) 60%, white 40%);\n        &:not(:disabled):hover {\n          background-color: color-mix(in oklch, var(--color) 16%, white 0%);\n        }\n        &:not(:disabled):active {\n          background-color: color-mix(in oklch, var(--color) 26%, white 2%);\n        }\n      }\n\n    }\n  </style>\n  <button part="button"><slot></slot></button>\n';class o extends HTMLElement{#t;#o;#n;static{customElements.define("va-button",this)}constructor(){super(),this.attachShadow({mode:"open"}),this.#n=t.content.cloneNode(!0),this.shadowRoot.appendChild(this.#n),this.#t=this.shadowRoot.querySelector("button")}connectedCallback(){this.#e(),this.#i()}disconnectedCallback(){this.#a()}static get observedAttributes(){return["disabled","block","color","variant","size","rounded","loading","type"]}attributeChangedCallback(t,o,n){switch(t){case"disabled":this.#r();break;case"block":this.#s();break;case"variant":this.#l(n);break;case"color":this.#d(n);break;case"size":this.#c(n);break;case"rounded":this.#b(n);break;case"loading":this.#u()}}#i(){this.#o=t=>{this.disabled||this.dispatchEvent(new CustomEvent("onBtnClick",{bubbles:!0,composed:!0,detail:{originalEvent:t}}))},this.#t.addEventListener("click",this.#o)}#a(){this.#t&&this.#o&&this.#t.removeEventListener("click",this.#o)}get disabled(){return this.#t.disabled}set disabled(t){t?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get block(){return this.hasAttribute("block")}set block(t){t?this.setAttribute("block",""):this.removeAttribute("block")}get loading(){return this.hasAttribute("loading")}set loading(t){t?this.setAttribute("loading",""):this.removeAttribute("loading")}set variant(t){this.setAttribute("variant",t)}set color(t){this.setAttribute("color",t)}set size(t){this.setAttribute("size",t)}set rounded(t){this.setAttribute("rounded",t)}#s(){this.classList.toggle("block",this.hasAttribute("block"))}#r(){this.#t.disabled=this.hasAttribute("disabled"),this.#t.setAttribute("aria-disabled",this.hasAttribute("disabled"))}#l(t="solid"){this.#t.setAttribute("data-variant",t)}#d(t){this.#t.setAttribute("data-color",t)}#c(t="md"){this.#t.setAttribute("data-size",t)}#b(t){this.#t.setAttribute("data-rounded",t)}#u(){this.#t.setAttribute("data-loading",this.hasAttribute("loading")),this.hasAttribute("loading")?this.#t.setAttribute("aria-label","loading"):this.#t.removeAttribute("aria-label")}#e(t="button"){this.#t.setAttribute("type",t)}}class n extends HTMLElement{static{customElements.define("va-theme-provider",this)}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML="\n      <style>\n        :host {\n          --black-color: #181818;\n          --primary-color: #0D65F2;\n          --warning-color: #FFAB1A;\n          --success-color: #10CC4B;\n          --danger-color: #F03D4F;\n        }\n      </style>\n      <slot></slot>\n    "}}
